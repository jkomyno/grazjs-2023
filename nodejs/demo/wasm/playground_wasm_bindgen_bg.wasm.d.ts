/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function get_letter(a: number): number;
export function get_key_length(a: number): number;
export function inc_or_fail(a: number, b: number, c: number): void;
export function enum_to_string(a: number, b: number): void;
export function enum_from_string(a: number, b: number, c: number): void;
export function maybe_inc(a: number, b: number, c: number): void;
export function get_i32_array_length(a: number, b: number): number;
export function get_u32_array_length(a: number, b: number): number;
export function __wbg_numericarrays_free(a: number): void;
export function __wbg_get_numericarrays_int32(a: number, b: number): void;
export function __wbg_set_numericarrays_int32(a: number, b: number, c: number): void;
export function __wbg_get_numericarrays_uint32(a: number, b: number): void;
export function __wbg_set_numericarrays_uint32(a: number, b: number, c: number): void;
export function __wbg_get_numericarrays_uint64(a: number, b: number): void;
export function __wbg_set_numericarrays_uint64(a: number, b: number, c: number): void;
export function __wbg_get_numericarrays_int64(a: number, b: number): void;
export function __wbg_set_numericarrays_int64(a: number, b: number, c: number): void;
export function __wbg_get_numericarrays_float(a: number, b: number): void;
export function __wbg_set_numericarrays_float(a: number, b: number, c: number): void;
export function __wbg_get_numericarrays_double(a: number, b: number): void;
export function __wbg_set_numericarrays_double(a: number, b: number, c: number): void;
export function __wbg_scalars_free(a: number): void;
export function __wbg_get_scalars_n(a: number): number;
export function __wbg_set_scalars_n(a: number, b: number): void;
export function __wbg_get_scalars_id(a: number): number;
export function __wbg_set_scalars_id(a: number, b: number): void;
export function __wbg_get_scalars_letter(a: number): number;
export function __wbg_set_scalars_letter(a: number, b: number): void;
export function __wbg_get_scalars_toggle(a: number): number;
export function __wbg_set_scalars_toggle(a: number, b: number): void;
export function scalars_new(a: number, b: number, c: number, d: number): number;
export function __wbg_optionalparams_free(a: number): void;
export function __wbg_get_optionalparams_int32(a: number, b: number): void;
export function __wbg_set_optionalparams_int32(a: number, b: number, c: number): void;
export function optionalparams_new(a: number, b: number): number;
export function duplicate_bigint(a: number): number;
export function duplicate_int(a: number): number;
export function duplicate_f64(a: number): number;
export function duplicate_f32(a: number): number;
export function duplicate_biguint(a: number): number;
export function duplicate_uint(a: number): number;
export function __wbg_stringparams_free(a: number): void;
export function __wbg_get_stringparams_id(a: number, b: number): void;
export function __wbg_set_stringparams_id(a: number, b: number, c: number): void;
export function get_string_length(a: number, b: number): number;
export function get_string_length_from_params(a: number): number;
export function to_uppercase(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
